name: Blaze4j Benchmarks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  benchmark:
    name: Run on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        java: [22]  # Test only with Java 22

    steps:
      - uses: actions/checkout@v4
      
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          
      - name: Build with Maven
        run: |
          # Ensure we're in repo root
          ls -la
          pwd
          # Build the Spring Boot jar once (skip tests for speed)
          cd spring-boot-example
          mvn -q -DskipTests package
        shell: bash
        
      - name: Start Spring Boot app
        run: |
          # Move into module if needed
          [ -d spring-boot-example ] && cd spring-boot-example

          JAR=$(ls target/*-SNAPSHOT.jar | head -n 1)
          echo "Running $JAR"

          if [[ "$RUNNER_OS" == "Windows" ]]; then
            powershell -Command "Start-Process 'java' '-jar','${JAR}' -NoNewWindow"
          else
            nohup java -jar "$JAR" >/dev/null 2>&1 &
          fi

          # Poll health endpoint (timeout 60s)
          for i in {1..30}; do
            if curl -sf http://localhost:8080/actuator/health >/dev/null; then
              echo 'Spring Boot is UP'; exit 0; fi; sleep 2; done

          echo 'Spring Boot failed to start'; cat app.log || true; exit 1
        shell: bash
      
      # Generate sample data files for testing
      - name: Generate sample data
        run: |
          # Determine if we're in the spring-boot-example directory or need to cd into it
          if [ -d "spring-boot-example" ]; then
            cd spring-boot-example
          fi
          
          # Check if we're in the right directory
          if [ ! -f "pom.xml" ]; then
            echo "Cannot find pom.xml - wrong directory"
            pwd
            ls -la
            exit 1
          fi
          
          # Create directories
          mkdir -p src/main/resources/example
          
          # Create small sample file
          echo '[{"id":"EMP00001","fullName":"Test Employee","birthDate":"1990-01-01","department":"HR","title":"Manager","salary":50000,"currency":"USD","address":{"street":"123 Main St","city":"Testville","postalCode":"12345","country":"US"},"contacts":[{"type":"email","value":"test@example.com","primary":true}]}]' > employees-sample.json
          
          # Show what we've created
          ls -la
          ls -la src/main/resources/example
          
          # Compile and run the data generator to create a small pre-generated file
          echo "Generating sample data file..."
          mvn compile exec:java -Dexec.mainClass="com.example.util.DataGenerator" -Dexec.args="1000" -q > src/main/resources/example/employees-large.json
          
          # Verify file was created
          if [ -f "src/main/resources/example/employees-large.json" ]; then
            echo "Sample data file created successfully"
            ls -la src/main/resources/example
          else
            echo "Failed to create sample data file"
            exit 1
          fi
          
      - name: Run benchmarks
        run: |
          # Determine if we're in the spring-boot-example directory or need to cd into it
          if [ -d "spring-boot-example" ]; then
            cd spring-boot-example
          fi
          
          # Check if app is running
          if ! curl -s http://localhost:8080 &>/dev/null; then
            echo "Spring Boot app is not running. Here's the log:"
            cat app.log
            exit 1
          fi
          
          echo "=== Small sample benchmark ==="
          curl -v -F "file=@employees-sample.json" http://localhost:8080/api/upload
          
          echo -e "\n=== 10k records benchmark (5 runs) ==="
          for i in {1..5}; do
            curl -s http://localhost:8080/api/benchmark
            echo
          done
          
          echo -e "\n=== 100k records benchmark ==="
          curl "http://localhost:8080/api/benchmark?size=100000"
        shell: bash
      
      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: logs-${{ matrix.os }}-java${{ matrix.java }}
          path: spring-boot-example/app.log
